declare const utils: {
    typeOf: (data: any) => string;
    isDate: (data: any) => boolean;
    consoleDebug: (sql?: string, retry?: boolean) => void;
    consoleExec: (startTime: number, endTime: number) => void;
    faker: (value: string) => string | number | boolean;
    columnRelation: (name: string) => string;
    timestamp: (dateString?: string | Date) => string;
    date: (value?: Date) => string;
    escape: (str: any, hard?: boolean) => any;
    escapeActions: (str: any) => any;
    escapeXSS: (str: any) => any;
    generateUUID: () => string;
    covertBooleanToNumber: (data: any) => any;
    covertDateToDateString: (data: any) => any;
    snakeCase: (data: any) => any;
    camelCase: (data: any) => any;
    randomString: (length?: number) => string;
    hookHandle: (hooks: Function[], result: any[] | Record<string, any> | null) => Promise<void>;
    chunkArray: <T>(array: T[], length: number) => T[][];
};
export type TUtils = typeof utils;
export { utils };
export default utils;
